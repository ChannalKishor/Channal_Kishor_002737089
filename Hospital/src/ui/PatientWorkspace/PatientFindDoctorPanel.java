/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.PatientWorkspace;

import Hospital.City.CityDirectory;
import Hospital.Community.CommunityDirectory;
import Hospital.Doctor.Doctor;
import Hospital.Doctor.DoctorDirectory;
import Hospital.Encounter.EncounterDirectory;
import Hospital.Hospital.HospitalDirectory;
import Hospital.House.HouseDirectory;
import Hospital.Patient.Patient;
import Hospital.Patient.PatientDirectory;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author kishor
 */
public class PatientFindDoctorPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientDoctorList
     */
    private Patient patient;
    private CommunityDirectory communityList;
    private CityDirectory cityList;
    private PatientDirectory patientList;
    private DoctorDirectory doctorList;
    private HospitalDirectory hospitalList;
    private HouseDirectory houseList;
    private EncounterDirectory encounterList;
    
    
    public PatientFindDoctorPanel(Patient patient,PatientDirectory patientList, DoctorDirectory doctorList,HospitalDirectory hospitalList,CityDirectory cityList,CommunityDirectory communityList,HouseDirectory houseList,EncounterDirectory encounterList) {
        initComponents();
        this.patient = patient;
        this.communityList = communityList;
        this.cityList = cityList;
        this.patientList = patientList;
        this.doctorList = doctorList; 
        this.hospitalList = hospitalList;
        this.houseList = houseList;
        this.encounterList = encounterList;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPaneDoctor = new javax.swing.JScrollPane();
        tableDoctor = new javax.swing.JTable();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnHospitalList = new javax.swing.JButton();
        lbltitle1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 204, 204));

        tableDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Specialization", "Hospital", "City", "Community", "Age", "Gender", "Phone No"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrollPaneDoctor.setViewportView(tableDoctor);

        lblSearch.setText("Search:");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnHospitalList.setText("Hospital List");
        btnHospitalList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalListActionPerformed(evt);
            }
        });

        lbltitle1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        lbltitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitle1.setText("PATIENT: SEARCH DOCTORS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHospitalList, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSearch)
                                .addGap(12, 12, 12)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lbltitle1, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltitle1)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearch))
                .addGap(36, 36, 36)
                .addComponent(scrollPaneDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnHospitalList)
                .addContainerGap(266, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String searchQuery = txtSearch.getText();
        Search(searchQuery);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnHospitalListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalListActionPerformed
        // TODO add your handling code here:
        PatientHospitalPanel hospitalListJPanel = new PatientHospitalPanel(patient, patientList, doctorList, hospitalList, cityList, communityList, houseList, encounterList);
        hospitalListJPanel.setVisible(true);
    }//GEN-LAST:event_btnHospitalListActionPerformed

    private void Search(String searchQuery){
        DefaultTableModel model = (DefaultTableModel) tableDoctor.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        
        tableDoctor.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(searchQuery));
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tableDoctor.getModel();
        model.setRowCount(0);

        for(Doctor doc : doctorList.getDoctorList()){

            Object[] row = new Object[8];
            row[0] = doc; 
            row[1] = doc.getSpecialization();
            row[2] = doc.getHospital();
            row[3] = doc.getAge();
            row[4] = doc.getGender();
            row[5] = doc.getPhno();

            model.addRow(row);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHospitalList;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lbltitle1;
    private javax.swing.JScrollPane scrollPaneDoctor;
    private javax.swing.JTable tableDoctor;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
