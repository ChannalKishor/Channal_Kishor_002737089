/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.HospitalAdminWorkspace;

import Hospital.City.CityDirectory;
import Hospital.Community.CommunityDirectory;
import Hospital.House.HouseDirectory;
import Hospital.Patient.Patient;
import Hospital.Patient.PatientDirectory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kishor
 */
public class HospitalPatientPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalPatientPanel
     */
    private PatientDirectory patientList;
    private CityDirectory cityList;
    private CommunityDirectory communityList;
    private HouseDirectory houseList;
    
    public HospitalPatientPanel(PatientDirectory patientList,CityDirectory cityList,CommunityDirectory communityList,HouseDirectory houseList) {
        initComponents();
        this.patientList = patientList;
        this.cityList = cityList;
        this.communityList = communityList;
        this.houseList = houseList;
        populateTable();
        populateCity();
        populateState();
        populateCountry();
        populateComm();
        populateHouse();
        btnSave.setVisible(false);
        btnClear.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCreate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        scrollPanePatient = new javax.swing.JScrollPane();
        tablePatient = new javax.swing.JTable();
        lblRole = new javax.swing.JLabel();
        txtRole = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblEmailId = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        lblPhNo = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtGender = new javax.swing.JComboBox<>();
        lblUsername = new javax.swing.JLabel();
        lblPatientId1 = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPhNo = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        txtState = new javax.swing.JComboBox<>();
        lblCity = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        txtCommunity = new javax.swing.JComboBox<>();
        lblHouse = new javax.swing.JLabel();
        txtHouse = new javax.swing.JComboBox<>();
        lblPassword = new javax.swing.JLabel();
        txtCity = new javax.swing.JComboBox<>();
        txtPassword = new javax.swing.JPasswordField();
        lblCountry = new javax.swing.JLabel();
        txtCountry = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lbltitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 0, 102));

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        tablePatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Name", "Age", "Gender", "Phone No"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrollPanePatient.setViewportView(tablePatient);

        lblRole.setText("Role:");

        txtRole.setEditable(false);
        txtRole.setText("Patient");

        lblAge.setText("Age: ");

        lblEmailId.setText("Email Id:");

        lblGender.setText("Gender: ");

        txtEmailId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIdActionPerformed(evt);
            }
        });

        lblPhNo.setText("Phone No: ");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        txtGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "Male", "Female", "Others" }));

        lblUsername.setText("Username:");

        lblPatientId1.setText("Patient Id:");

        txtPhNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhNoActionPerformed(evt);
            }
        });

        lblName.setText("Name: ");

        lblState.setText("State:");

        lblCity.setText("City:");

        lblCommunity.setText("Community:");

        lblHouse.setText("House:");

        lblPassword.setText("Password:");

        lblCountry.setText("Country:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lbltitle.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitle.setText("HOSPITAL ADMIN: PATIENT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblName)
                                        .addGap(60, 60, 60))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblRole)
                                            .addComponent(lblPatientId1)
                                            .addComponent(lblUsername))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName)
                                    .addComponent(txtPatientId)
                                    .addComponent(txtUsername)
                                    .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblAge)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblGender)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblEmailId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(39, 39, 39))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblPhNo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(txtPhNo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblCountry)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblState)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblCommunity)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblCity)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblHouse)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblPassword)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(scrollPanePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltitle, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblAge, lblCity, lblCommunity, lblCountry, lblEmailId, lblGender, lblHouse, lblName, lblPassword, lblPatientId1, lblPhNo, lblRole, lblState, lblUsername});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCreate, btnEdit, btnView});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltitle)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCreate)
                        .addGap(18, 18, 18)
                        .addComponent(btnView)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit))
                    .addComponent(scrollPanePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRole)
                            .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPatientId1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsername))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGender)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHouse)
                            .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCommunity)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblState)
                            .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCountry)
                            .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailId))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClear)
                            .addComponent(btnSave))))
                .addGap(47, 47, 47))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblAge, lblCity, lblCommunity, lblCountry, lblEmailId, lblGender, lblHouse, lblName, lblPassword, lblPatientId1, lblPhNo, lblRole, lblState, lblUsername});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCreate, btnEdit, btnView});

    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        btnClear.setVisible(false);
        String role = txtRole.getText();
        Integer patientId = Integer.parseInt(txtPatientId.getText());
        String username = txtUsername.getText();
        String name = txtName.getText();
        Integer age = Integer.parseInt(txtAge.getText());
        String gender = String.valueOf(txtGender.getSelectedItem());
        Long phno = Long.parseLong(txtPhNo.getText());
        String email = txtEmailId.getText();
        String house = String.valueOf(txtHouse.getSelectedItem());
        String city = String.valueOf(txtCity.getSelectedItem());
        String community = String.valueOf(txtCommunity.getSelectedItem());
        String state = String.valueOf(txtState.getSelectedItem());
        String country = String.valueOf(txtCountry.getSelectedItem());
        //        String address = txtAddress.getText();
        char[] pass = txtPassword.getPassword();
        String password = new String(pass);

        Patient newPatient = patientList.addPatient();

        newPatient.setRole(role);
        newPatient.setPatientId(patientId);
        newPatient.setUsername(username);
        newPatient.setName(name);
        newPatient.setAge(age);
        newPatient.setGender(gender);
        newPatient.setPhno(phno);
        newPatient.setEmail(email);
        newPatient.setState(state);
        newPatient.setCity(city);
        newPatient.setCommunity(community);
        newPatient.setHouse(house);
        //        newPatient.setAddress(address);
        newPatient.setPassword(password);

        JOptionPane.showMessageDialog(this, "Patient Created Successfully");

        txtPatientId.setText("");
        txtUsername.setText("");
        txtName.setText("");
        txtAge.setText("");
        txtGender.setSelectedIndex(0);
        txtPhNo.setText("");
        txtEmailId.setText("");
        txtHouse.setSelectedIndex(0);
        txtCountry.setSelectedIndex(0);
        txtState.setSelectedIndex(0);
        txtCity.setSelectedIndex(0);
        txtCommunity.setSelectedIndex(0);
        //        txtAddress.setText("");
        txtPassword.setText("");

        populateTable();

    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        btnSave.setVisible(false);
        btnClear.setVisible(true);
        Integer selectedRowIndex = tablePatient.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
            Patient selectedPat = (Patient) model.getValueAt(selectedRowIndex,0);

            txtPatientId.setText(String.valueOf(selectedPat.getPatientId()));
            txtUsername.setText(selectedPat.getUsername());
            txtName.setText(selectedPat.getName());
            txtAge.setText(String.valueOf(selectedPat.getAge()));
            txtGender.setSelectedItem(selectedPat.getGender());
            txtPhNo.setText(String.valueOf(selectedPat.getPhno()));
            txtEmailId.setText(selectedPat.getEmail());
            txtCountry.setSelectedItem(selectedPat.getCountry());
            txtState.setSelectedItem(selectedPat.getState());
            txtCity.setSelectedItem(selectedPat.getCity());
            txtCommunity.setSelectedItem(selectedPat.getCommunity());
            txtHouse.setSelectedItem(selectedPat.getHouse());
            //            txtAddress.setText(selectedPat.getAddress());
            txtPassword.setText(selectedPat.getPassword());
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        btnSave.setVisible(true);
        btnClear.setVisible(true);
        Integer selectedRowIndex = tablePatient.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
            Patient selectedPat = (Patient) model.getValueAt(selectedRowIndex,0);

            txtPatientId.setText(String.valueOf(selectedPat.getPatientId()));
            txtUsername.setText(selectedPat.getUsername());
            txtName.setText(selectedPat.getName());
            txtAge.setText(String.valueOf(selectedPat.getAge()));
            txtGender.setSelectedItem(selectedPat.getGender());
            txtPhNo.setText(String.valueOf(selectedPat.getPhno()));
            txtEmailId.setText(selectedPat.getEmail());
            txtCountry.setSelectedItem(selectedPat.getCountry());
            txtState.setSelectedItem(selectedPat.getState());
            txtCity.setSelectedItem(selectedPat.getCity());
            txtCommunity.setSelectedItem(selectedPat.getCommunity());
            txtHouse.setSelectedItem(selectedPat.getHouse());
            //            txtAddress.setText(selectedPat.getAddress());
            txtPassword.setText(selectedPat.getPassword());

        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void txtEmailIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIdActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtPhNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhNoActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tablePatient.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
            Patient selectedPat = (Patient) model.getValueAt(selectedRowIndex,0);

            selectedPat.setPatientId(Integer.parseInt(txtPatientId.getText()));
            selectedPat.setUsername(txtUsername.getText());
            selectedPat.setName(txtName.getText());
            selectedPat.setAge(Integer.parseInt(txtAge.getText()));
            selectedPat.setGender(String.valueOf(txtGender.getSelectedItem()));
            selectedPat.setPhno(Long.parseLong(txtPhNo.getText()));
            selectedPat.setEmail(txtEmailId.getText());
            selectedPat.setCity(String.valueOf(txtCity.getSelectedItem()));
            selectedPat.setCommunity(String.valueOf(txtCommunity.getSelectedItem()));
            selectedPat.setHouse(String.valueOf(txtHouse.getSelectedItem()));
            selectedPat.setState(String.valueOf(txtState.getSelectedItem()));
            selectedPat.setCountry(String.valueOf(txtCountry.getSelectedItem()));
            //            selectedPat.setAddress(txtAddress.getText());
            selectedPat.setPassword(txtPassword.getText());

            JOptionPane.showMessageDialog(this, "Patient details updated successfully.");

            populateTable();

        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtPatientId.setText("");
        txtUsername.setText("");
        txtName.setText("");
        txtAge.setText("");
        txtGender.setSelectedIndex(0);
        txtPhNo.setText("");
        txtEmailId.setText("");
        txtHouse.setSelectedIndex(0);
        txtCountry.setSelectedIndex(0);
        txtState.setSelectedIndex(0);
        txtCity.setSelectedIndex(0);
        txtCommunity.setSelectedIndex(0);
        //        txtAddress.setText("");
        txtPassword.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
        model.setRowCount(0);
        
        for(Patient pat : patientList.getPatientList()){
            
            Object[] row = new Object[5];
            row[0] = pat; 
            row[1] = pat.getName();
            row[2] = pat.getAge();
            row[3] = pat.getGender();
            row[4] = pat.getPhno();
             
            model.addRow(row);
        }
    }
    
    public void populateHouse(){
        String[] houArr = houseList.houseArray();
        DefaultComboBoxModel h = new DefaultComboBoxModel(houArr);
        txtHouse.setModel(h);
    }
    
    public void populateCity(){
        String[] cityArr = cityList.cityArray();
        DefaultComboBoxModel c = new DefaultComboBoxModel(cityArr);
        txtCity.setModel(c);
    }
    
    public void populateState(){
        String[] stateArr = cityList.stateArray();
        DefaultComboBoxModel s = new DefaultComboBoxModel(stateArr);
        txtState.setModel(s);
    }
    
    public void populateCountry(){
        String[] countryArr = cityList.countryArray();
        DefaultComboBoxModel c = new DefaultComboBoxModel(countryArr);
        txtCountry.setModel(c);
    }
    
     public void populateComm(){
        String[] commArr = communityList.commArray();
        DefaultComboBoxModel c = new DefaultComboBoxModel(commArr);
        txtCommunity.setModel(c);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblEmailId;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPatientId1;
    private javax.swing.JLabel lblPhNo;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JScrollPane scrollPanePatient;
    private javax.swing.JTable tablePatient;
    private javax.swing.JTextField txtAge;
    private javax.swing.JComboBox<String> txtCity;
    private javax.swing.JComboBox<String> txtCommunity;
    private javax.swing.JComboBox<String> txtCountry;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JComboBox<String> txtGender;
    private javax.swing.JComboBox<String> txtHouse;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPhNo;
    private javax.swing.JTextField txtRole;
    private javax.swing.JComboBox<String> txtState;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
